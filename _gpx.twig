{#  This file is inserted if a record has a gpx track
    If there is a gpx-file, also in _head-twig the code for
    leaflet and leaflet-gpx is inserted
#}

{# heavily inspired by http://mpetazzoni.github.io/leaflet-gpx/ <!-- Copyright (C) 2011-2012 Pavel Shramov Copyright (C) 2013 Maxime Petazzoni <maxime.petazzoni@bulix.org> Copyright (c) 2017 Martin Kausche All Rights Reserved. Redistribution and use
in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. -
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. --> #}

<section id="gpxviewer" class="gpx" data-gpx-source="{{ asset(record.gpx, 'files') }}" data-map-target="demo-map">
    <article>
        <div class="map" id="demo-map"></div>
    </article>

    <footer>
        <ul class="info">
            <li>
                <i class="fa fa-arrows-h" aria-hidden="true"></i>
                <span class="distance"></span>km</li>
            &nbsp;&nbsp;&nbsp;
            <li>
                <i class="fa fa-clock-o" aria-hidden="true"></i>
                <span class="duration"></span>
                &nbsp;&nbsp;&nbsp;
            </li>
            <li>
                <i class="fa fa-level-down" aria-hidden="true"></i>
                <span class="elevation-min"></span>m &nbsp;
                <i class="fa fa-level-up" aria-hidden="true"></i>
                <span class="elevation-max"></span>m &nbsp;
                <i class="fa fa-arrows-v" aria-hidden="true"></i>
                <span class="elevation-diff"></span>m
            </li>
        </ul>
    </footer>
</section>
<style type="text/css">
    .gpx {
        width: 100%;
        margin: 1em auto;
    }

    .gpx .map {
        width: 100%;
        height: 500px;
        margin: 0;
    }
    .gpx footer {
        padding: 0.5em;
        background-color: #f8f8f8;
    }
    .gpx ul.info {
        list-style: none;
        margin: 0;
        padding: 0;
        font-size: smaller;
    }
    .gpx ul.info li {
        padding: 2px;
        display: inline;
    }
    /*we only show one track, no need for layer control */
    .gpx .leaflet-control-layers-toggle {
        display: none;
    }
</style>
<script type="application/javascript">
    function display_gpx(elt) {
        if (!elt)
            return;

        var url = elt.getAttribute('data-gpx-source');
        var mapid = elt.getAttribute('data-map-target');
        if (!url || !mapid)
            return;

        function _t(t) {
            return elt.getElementsByTagName(t)[0];
        }
        function _c(c) {
            return elt.getElementsByClassName(c)[0];
        }

        var map = L.map(mapid);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {attribution: 'Map data &copy; <a href="http://www.osm.org">OpenStreetMap</a>'}).addTo(map);

        var control = L.control.layers(null, null).addTo(map);

        new L.GPX(url, {
            async: true,
            max_point_interval: 5 * 60 *1000, //5 minutes
            marker_options: {
                startIconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet-gpx/1.3.1/pin-icon-start.png',
                endIconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet-gpx/1.3.1/pin-icon-end.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet-gpx/1.3.1/pin-shadow.png'
            }
        }).on('loaded', function(e) {
            var gpx = e.target;
            map.fitBounds(gpx.getBounds());
            control.addOverlay(gpx, "{{ record.title }}");
            /*
       * Note: the code below relies on the fact that the demo GPX file is
       * an actual GPS track with timing and heartrate information.
       */
            _c('distance').textContent = (gpx.get_distance() / 1000).toFixed(2);
            _c('duration').textContent = gpx.get_duration_string(gpx.get_moving_time()).replace("'", ':').replace('"', '');
            _c('elevation-min').textContent = gpx.get_elevation_min().toFixed(1);
            _c('elevation-max').textContent = gpx.get_elevation_max().toFixed(1);
            _c('elevation-diff').textContent = (gpx.get_elevation_max() - gpx.get_elevation_min()).toFixed(1);
        }).addTo(map);
    }

    display_gpx(document.getElementById('gpxviewer'));
</script>
